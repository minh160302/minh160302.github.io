{"version":3,"sources":["store/root/type.ts","store/actions/theme.ts","components/AppBar/AppBar.tsx","store/utils/async_types.ts","store/actions/route.ts","assets/img/jisoo_1.png","views/About.tsx","components/Button/IconButton.tsx","components/Card/ProjectCard.tsx","assets/img/pte-magic-landing.png","assets/img/nauvus-landing.png","assets/img/bidmax-landing.png","assets/img/moni-pte-landing.png","assets/img/pte-ui-landing.png","assets/img/mstc-landing.png","assets/img/chat-app-landing.png","views/Projects.tsx","views/Resume.tsx","views/Contact.tsx","views/Playground.tsx","routes.ts","layouts/Layout.tsx","app-routes.tsx","App.tsx","reportWebVitals.ts","store/utils/axios-interceptor.ts","store/utils/constants.ts","store/sagas/theme.ts","store/sagas/rootSaga.ts","store/reducers/theme.ts","store/reducers/route.ts","store/reducers/index.ts","store/root/logger-middleware.ts","store/root/store.ts","index.tsx"],"names":["THEME","ROUTE","changeTheme","theme","type","payload","useStyles","makeStyles","createStyles","root","flexGrow","fontFamily","fontSize","marginLeft","header","width","transition","transitions","create","easing","sharp","duration","leavingScreen","headerShift","easeOut","enteringScreen","menuButton","marginRight","spacing","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","alpha","palette","common","white","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","mapDispatchToProps","connect","props","classes","matches","useMediaQuery","className","AppBar","classNames","openDrawer","style","background","Toolbar","edge","onClick","toggleDrawer","Typography","variant","noWrap","InputBase","placeholder","input","inputProps","REQUEST","actionType","SUCCESS","FAILURE","changeRoute","route","rowWrapper","flexDirection","columnGap","down","img","marginBottom","aboutWrapper","greetTitle","marginTop","content","lineWrapper","connectBtn","opacity","infoWrapper","history","useHistory","src","profileImg","alt","Button","push","map","text","key","minWidth","boxShadow","IconButton","children","fontWeight","margin","description","technology","contentRoot","button","actionsRoots","Card","imageSrc","CardContent","gutterBottom","component","name","CardActions","console","log","githubUrl","link","rowWrapper_2","rowWrapper_2_sm","pteLanding","bidmaxLanding","nauvusLanding","moniPteLanding","pteUiLanding","mstcLanding","chatAppLanding","routes","path","icon","PersonIcon","components","About","CodeIcon","Projects","DescriptionIcon","Resume","PhoneIcon","Contact","SportsEsportsIcon","Playground","ColorLensIcon","top","left","right","scrollRoot","bottom","bodyWrapper","paddingTop","bodyWrapperShift","main","maxWidth","overflowX","list","drawerHeader","textAlign","drawerText","listItem","active","iconActive","fill","ScrollTop","window","trigger","useScrollTrigger","target","undefined","disableHysteresis","threshold","Zoom","in","event","anchor","ownerDocument","document","querySelector","scrollIntoView","behavior","block","role","useState","setActive","setOpenDrawer","useEffect","location","pathname","open","id","Drawer","onClose","onKeyDown","Divider","List","index","ListItem","ListItemIcon","prop","from","to","Fab","size","hist","createBrowserHistory","Routes","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","axios","defaults","baseURL","headers","post","setUpAxiosInterceptors","onErrorHandling","interceptors","response","use","error","data","status","Promise","reject","ThemeWorker","ThemeWatcher","action","put","takeLatest","all","rootSaga","fork","OverviewWatcher","initialState","loading","errorMessage","themeReducer","state","routeReducer","rootReducers","combineReducers","loggerMiddleware","next","meta","groupCollapsed","groupEnd","sagaMiddleware","createSagaMiddleware","defaultMiddlewares","loggerMiddlewares","initialize","middlewares","store","createStore","composeWithDevTools","applyMiddleware","run","initStore","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.7c519a71.chunk.js","sourcesContent":["export const THEME = {\n  changeTheme: \"theme/CHANGE_THEME\"\n}\n\nexport const ROUTE = {\n  changeRoute: \"theme/CHANGE_ROUTE\"\n}\n","import { THEME } from \"store/root/type\";\nimport { ChangeThemePayload } from \"./payload-types\";\n\nexport const changeTheme = (theme: ChangeThemePayload) => {\n  return {\n    type: THEME.changeTheme,\n    payload: theme,\n  };\n};\n\n","import React, { useState } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport { createStyles, alpha, Theme, makeStyles } from '@material-ui/core/styles';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { IRootState } from 'store/reducers';\nimport { changeTheme } from \"store/actions/theme\"\nimport { ChangeThemePayload } from 'store/actions/payload-types';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport { useMediaQuery } from '@material-ui/core';\n\n\nconst drawerWidth = 250;\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n      fontFamily: \"'Hina Mincho', serif;\",\n      fontSize: 20,\n      marginLeft: 0,\n    },\n    header: {\n      width: `100%`,\n      marginLeft: 0,\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    headerShift: {\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      width: `calc(100% - ${drawerWidth}px) !important`,\n      marginLeft: drawerWidth,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n      display: 'none',\n      fontFamily: \"'Hina Mincho', serif;\",\n      fontSize: 26,\n      [theme.breakpoints.up('sm')]: {\n        display: 'block',\n      },\n    },\n    search: {\n      position: 'relative',\n      borderRadius: theme.shape.borderRadius,\n      fontFamily: \"'Hina Mincho', serif;\",\n      fontSize: 20,\n      backgroundColor: alpha(theme.palette.common.white, 0.15),\n      '&:hover': {\n        backgroundColor: alpha(theme.palette.common.white, 0.25),\n      },\n      marginLeft: 0,\n      width: '100%',\n      [theme.breakpoints.up('sm')]: {\n        marginLeft: theme.spacing(1),\n        width: 'auto',\n      },\n    },\n    searchIcon: {\n      padding: theme.spacing(0, 2),\n      height: '100%',\n      position: 'absolute',\n      pointerEvents: 'none',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    inputRoot: {\n      color: 'inherit',\n    },\n    inputInput: {\n      padding: theme.spacing(1, 1, 1, 0),\n      // vertical padding + font size from searchIcon\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n      transition: theme.transitions.create('width'),\n      width: '100%',\n      [theme.breakpoints.up('sm')]: {\n        width: '12ch',\n        '&:focus': {\n          width: '20ch',\n        },\n      },\n    },\n  }),\n);\n\ninterface IState {\n  theme: string;\n  color: string;\n}\n\ninterface IDispatch {\n  changeTheme: (theme: ChangeThemePayload) => {}\n}\n\ninterface AppBarProps {\n  toggleDrawer: (open: boolean) => (event: React.KeyboardEvent | React.MouseEvent) => void;\n  openDrawer: boolean;\n}\n\ntype Props = IState & IDispatch & AppBarProps\n\nconst SearchAppBar: React.FC<Props> = (props) => {\n  const classes = useStyles();  \n  const matches = useMediaQuery('(max-width:768px)');\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"fixed\" className={classNames(classes.header, {\n        [classes.headerShift]: props.openDrawer && !matches,\n      })}\n        style={{ background: props.theme, color: props.color }}>\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={props.toggleDrawer(!props.openDrawer)}\n          >\n            {\n              props.openDrawer === true ? <ChevronLeftIcon /> : <MenuIcon />\n            }\n          </IconButton>\n          <Typography className={classes.title} variant=\"h4\" noWrap>\n            Minh Nguyen\n          </Typography>\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder=\"Search…\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              inputProps={{ 'aria-label': 'search' }}\n            />\n          </div>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\n\nconst mapStateToProps = ({ theme }: IRootState) => ({\n  theme: theme.theme,\n  color: theme.color\n})\n\nconst mapDispatchToProps = {\n  changeTheme\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchAppBar);","/**\n * Appends REQUEST async action type\n */\n\nexport const REQUEST = actionType => `${actionType}_REQUEST`;\n\n/**\n * Appends SUCCESS async action type\n */\n\nexport const SUCCESS = actionType => `${actionType}_SUCCESS`;\n\n/**\n * Appends FAILURE async action type\n */\n\nexport const FAILURE = actionType => `${actionType}_FAILURE`;","import { ROUTE } from \"store/root/type\";\nimport { SUCCESS } from \"store/utils/async_types\";\n\nexport const changeRoute = (route: string) => {\n  return {\n    type: SUCCESS(ROUTE.changeRoute),\n    payload: route,\n  };\n};\n\n","export default __webpack_public_path__ + \"static/media/jisoo_1.e877b051.png\";","import React, { useState } from \"react\";\nimport classNames from \"classnames\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport { connect } from \"react-redux\";\nimport { IRootState } from \"store/reducers\";\nimport { changeTheme } from \"store/actions/theme\"\nimport { changeRoute } from \"store/actions/route\";\nimport { ChangeThemePayload } from \"store/actions/payload-types\";\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n// @material-ui/icons\nimport profileImg from \"assets/img/jisoo_1.png\"\nimport CheckIcon from '@material-ui/icons/Check';\nimport { Button } from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\"\n\nconst drawerWidth = 250;\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n  root: {\n    width: \"100%\",\n    fontFamily: \"'Hina Mincho', serif;\",\n    fontSize: 20\n  },\n  rowWrapper: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    width: \"100%\",\n    columnGap: 30,\n    [theme.breakpoints.down('sm')]: {\n      flexDirection: \"column\",\n      alignItems: \"center\",\n    },\n  },\n  img: {\n    width: \"30%\",\n    height: \"auto\",\n    borderRadius: \"8px\",\n    [theme.breakpoints.down('sm')]: {\n      marginBottom: 20,\n      width: \"80%\",\n    },\n  },\n  aboutWrapper: {\n    fontFamily: \"'Hina Mincho', serif;\",\n    width: \"100%\",\n  },\n  greetTitle: {\n    marginTop: 0,\n    marginBottom: 0\n  },\n  content: {\n\n  },\n  lineWrapper: {\n    display: \"flex\",\n    alignItems: \"flex-start\",\n    columnGap: 20\n  },\n  connectBtn: {\n    marginTop: 20,\n    padding: 15,\n    background: \"black\",\n    color: \"#ffffff\",\n    fontFamily: \"'Hina Mincho', serif;\",\n    fontSize: \"22\",\n    borderRadius: 8,\n    \"&:hover\": {\n      background: \"black\",\n      color: \"#ffffff\",\n      opacity: 0.7\n    },\n  },\n  infoWrapper: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    marginBottom: 20\n  },\n\n}))\n\n\n\ninterface IState {\n  theme: string;\n  color: string;\n}\n\ninterface IDispatch {\n  changeTheme: (theme: ChangeThemePayload) => {};\n  changeRoute: (route: string) => {}\n}\n\n\ninterface AboutProps {\n  children: React.ReactNode\n}\n\ntype Props = AboutProps & IState & IDispatch\n\nconst About: React.FC<Props> = (props) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const matches = useMediaQuery('(max-width:768px)');\n\n  const textContents = [\n    \"Hanoian\",\n    \"Currently a sophomore major in Computer Science at Oberlin College, Ohio\",\n    \"I'm passionate about programming and willing to challenge myself with new technology\",\n    \"Physics & Film lover\"\n  ]\n  return (\n    <div className={classes.root}>\n      <div className={classes.rowWrapper}>\n        <img src={profileImg} alt=\"profile image\" className={classes.img} />\n        <div className={classes.aboutWrapper}>\n          <div className={classes.infoWrapper}>\n            <h2 className={classes.greetTitle}>Hi, I'm Minh</h2>\n            <Button className={classes.connectBtn} onClick={() => {\n              // change redux state to update sidebar\n              props.changeRoute(\"/contact\")\n              history.push(\"/contact\")\n            }}>Connect</Button>\n          </div>\n          <div className={classes.content}>\n            {textContents.map((text, key) => <div className={classes.lineWrapper} key={key}>\n              <CheckIcon />\n              {text}\n            </div>)}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = ({ theme }: IRootState) => ({\n  theme: theme.theme,\n  color: theme.color\n})\n\nconst mapDispatchToProps = {\n  changeTheme,\n  changeRoute\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(About);","import React, { useState } from 'react';\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\nimport { Button } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      height: 41,\n      width: 41,\n      minWidth: 41,\n      borderRadius: \"50%\",\n      background: \"#ffffff\",\n      color: \"black\",\n      boxShadow: \"0px 2px 6px 1px rgba(38, 38, 38, 0.2)\",\n      \"&:focus\": {\n        opacity: 0.8,\n        backgroundColor: \"rgba(0, 0, 0, 0) !important\"\n      },\n    }\n  },\n  ));\n\ninterface IconButtonProps {\n  children: React.ReactNode;\n  onClick?: React.MouseEventHandler<HTMLButtonElement>\n}\n\nconst IconButton: React.FC<IconButtonProps> = (props) => {\n  const classes = useStyles();\n  return (\n    <Button classes={{\n      root: classes.root,\n    }}\n      onClick={props.onClick}\n    >\n      {props.children}\n    </Button>\n  );\n}\n\n\nexport default IconButton;","import React, { useState } from 'react';\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\nimport { IRootState } from 'store/reducers';\nimport { changeTheme } from \"store/actions/theme\"\nimport { ChangeThemePayload } from 'store/actions/payload-types';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from 'components/Button/IconButton';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\n\nconst drawerWidth = 250;\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      borderRadius: 15,\n      fontFamily: \"'Hina Mincho', serif;\",\n      fontSize: 20,\n      fontWeight: \"normal\",\n      marginBottom: 20,\n      width: 320,\n      \"&:hover\": {\n        transition: \"all 0.2s ease-out;\",\n        boxShadow: \"0px 2px 8px 1px rgba(38, 38, 38, 0.5);\",\n        // top: -4,\n        // border: \"1px solid #cccccc;\",\n        backgroundColor: \"white\",\n      },\n      [theme.breakpoints.down('md')]: {\n        width: \"80%\",\n        margin: \"auto\",\n        marginBottom: 20,\n      },\n    },\n    img: {\n      height: \"auto\",\n      width: \"100%\"\n    },\n    title: {\n      fontFamily: \"'Hina Mincho', serif;\",\n      fontSize: 26,\n      fontWeight: 600\n    },\n    description: {\n      fontFamily: \"'Hina Mincho', serif;\",\n      fontSize: 20,\n      height: 60\n    },\n    technology: {\n      fontFamily: \"'Hina Mincho', serif;\",\n      fontSize: 20,\n      height: 90\n    },\n    contentRoot: {\n      \"&:hover\": {\n\n      }\n    },\n    button: {\n      color: \"black\"\n    },\n    actionsRoots: {\n      padding: 15\n    },\n\n  }),\n);\n\ninterface IState {\n  theme: string;\n  color: string;\n}\n\ninterface IDispatch {\n  changeTheme: (theme: ChangeThemePayload) => {}\n}\n\ninterface ProjectCardProps {\n  name: string;\n  description: string;\n  link: string;\n  imageSrc: any;\n  githubUrl?: string;\n  technology: string;\n}\n\ntype Props = IState & IDispatch & ProjectCardProps\n\nconst ProjectCard: React.FC<Props> = (props) => {\n  const classes = useStyles();\n\n  const handleRouterGithub = (link) => {\n    window.open(link, \"_blank\")\n  }\n\n  return (\n    <Card className={classes.root}>\n      <div>\n        <img src={props.imageSrc} className={classes.img} />\n        <CardContent>\n          <Typography className={classes.title} gutterBottom variant=\"h5\" component=\"h2\">\n            {props.name}\n          </Typography>\n          <Typography className={classes.description} variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            {props.description}\n          </Typography>\n          <Typography className={classes.technology} variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            <strong>Technology</strong>: {props.technology}\n          </Typography>\n        </CardContent>\n      </div>\n      <CardActions classes={{ root: classes.actionsRoots }}>\n        <IconButton onClick={() => {\n          // handleRouterGithub(\"https://ptemagicpractice.com/\")\n          console.log(props.githubUrl)\n        }}>\n          <GitHubIcon />\n        </IconButton>\n        <IconButton onClick={() => {\n          console.log(props.link)\n        }}>\n          <VisibilityIcon />\n        </IconButton>\n      </CardActions>\n    </Card>\n  );\n}\n\n\nconst mapStateToProps = ({ theme }: IRootState) => ({\n  theme: theme.theme,\n  color: theme.color\n})\n\nconst mapDispatchToProps = {\n  changeTheme\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectCard);","export default __webpack_public_path__ + \"static/media/pte-magic-landing.3a902bc5.png\";","export default __webpack_public_path__ + \"static/media/nauvus-landing.35dc55f6.png\";","export default __webpack_public_path__ + \"static/media/bidmax-landing.fa7e97eb.png\";","export default __webpack_public_path__ + \"static/media/moni-pte-landing.335a2568.png\";","export default __webpack_public_path__ + \"static/media/pte-ui-landing.c7e3d7f2.png\";","export default __webpack_public_path__ + \"static/media/mstc-landing.38146eae.png\";","export default __webpack_public_path__ + \"static/media/chat-app-landing.f945e39b.png\";","import React, { useState } from \"react\";\nimport classNames from \"classnames\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport { connect } from \"react-redux\";\nimport { IRootState } from \"store/reducers\";\nimport { changeTheme } from \"store/actions/theme\"\nimport { ChangeThemePayload } from \"store/actions/payload-types\";\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { Card } from \"@material-ui/core\";\nimport ProjectCard from \"components/Card/ProjectCard\";\n// img\nimport pteLanding from \"assets/img/pte-magic-landing.png\"\nimport nauvusLanding from \"assets/img/nauvus-landing.png\"\nimport bidmaxLanding from \"assets/img/bidmax-landing.png\"\nimport moniPteLanding from \"assets/img/moni-pte-landing.png\"\nimport pteUiLanding from \"assets/img/pte-ui-landing.png\"\nimport mstcLanding from \"assets/img/mstc-landing.png\"\nimport chatAppLanding from \"assets/img/chat-app-landing.png\"\n// @material-ui/icons\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n  root: {\n    width: \"100%\",\n    fontFamily: \"'Hina Mincho', serif;\",\n    fontSize: 20\n  },\n  rowWrapper: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    width: \"100%\",\n    columnGap: 15,\n    justifyContent: \"space-between\",\n    marginBottom: 25\n  },\n  rowWrapper_2: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    width: \"calc(66% - 15px)\",\n    columnGap: 15,\n    justifyContent: \"space-between\",\n    marginBottom: 25\n  },\n  rowWrapper_2_sm: {\n    display: \"block\"\n  }\n\n}))\n\n\ninterface IState {\n  theme: string;\n  color: string;\n}\n\ninterface IDispatch {\n  changeTheme: (theme: ChangeThemePayload) => {}\n}\n\n\ninterface ProjectProps {\n  children: React.ReactNode\n}\n\ntype Props = ProjectProps & IState & IDispatch\n\nconst Projects: React.FC<Props> = (props) => {\n  const classes = useStyles();\n  const matches = useMediaQuery('(max-width:768px)');\n\n  return (\n    <div className={classes.root}>\n      {/* Commercial projects */}\n      <h3 style={{ marginTop: 0 }}>\n        Commercial Projects\n      </h3>\n      {\n        matches === true\n          ? <>\n            <ProjectCard\n              name=\"PTE Magic\"\n              description=\"An E-learning platform focus on PTE test preparation\"\n              imageSrc={pteLanding}\n              link=\"/pte-magic\"\n              githubUrl=\"/github/pte-magic\"\n              technology=\"ReactJS, Redux, NextJS, Spring Boot, PostgreSQL\"\n            />\n            <ProjectCard\n              name=\"Bid2Max\"\n              description=\"Bidding platform for construction machines\"\n              imageSrc={bidmaxLanding}\n              link=\"/bidmax\"\n              githubUrl=\"/github/bidmax\"\n              technology=\"ReactJS, Redux, NextJS, Spring Boot, PostgreSQL\"\n            />\n            <ProjectCard\n              name=\"Nauvus\"\n              description=\"An IoT start up similar to Samsara\"\n              imageSrc={nauvusLanding}\n              link=\"/nauvus\"\n              githubUrl=\"/github/nauvus\"\n              technology=\"ReactJS, Redux\"\n            />\n            <ProjectCard\n              name=\"Moni Vuong PTE\"\n              description=\"Video-based learning platform\"\n              imageSrc={moniPteLanding}\n              link=\"/moni-pte\"\n              githubUrl=\"/github/moni-pte\"\n              technology=\"ReactJS, Redux, Spring Boot, MongoDB, Netflix Eureka\"\n            />\n            <ProjectCard\n              name=\"PTE UI\"\n              description=\"npm package for UI components of questions in PTE test\"\n              imageSrc={pteUiLanding}\n              link=\"/pte-ui\"\n              githubUrl=\"/github/pte-ui\"\n              technology=\"Storybook, Redux, TypeScript\"\n            />\n            <ProjectCard\n              name=\"BENIT Academy\"\n              description=\"Scalable E-learning platform like Udacity\"\n              imageSrc={pteLanding}\n              link=\"/nauvus\"\n              githubUrl=\"/github/nauvus\"\n              technology=\"ReactJS, Redux, Spring Boot, MongoDB\"\n            />\n          </>\n          : <>\n            <div className={classes.rowWrapper}>\n              <ProjectCard\n                name=\"PTE Magic\"\n                description=\"An E-learning platform focus on PTE test preparation\"\n                imageSrc={pteLanding}\n                link=\"/pte-magic\"\n                githubUrl=\"/github/pte-magic\"\n                technology=\"ReactJS, Redux, NextJS, Spring Boot, PostgreSQL\"\n              />\n              <ProjectCard\n                name=\"Bid2Max\"\n                description=\"Bidding platform for construction machines\"\n                imageSrc={bidmaxLanding}\n                link=\"/bidmax\"\n                githubUrl=\"/github/bidmax\"\n                technology=\"ReactJS, Redux, NextJS, Spring Boot, PostgreSQL\"\n              />\n              <ProjectCard\n                name=\"Nauvus\"\n                description=\"An IoT start up similar to Samsara\"\n                imageSrc={nauvusLanding}\n                link=\"/nauvus\"\n                githubUrl=\"/github/nauvus\"\n                technology=\"ReactJS, Redux\"\n              />\n            </div>\n            <div className={classes.rowWrapper}>\n              <ProjectCard\n                name=\"Moni Vuong PTE\"\n                description=\"Video-based learning platform\"\n                imageSrc={moniPteLanding}\n                link=\"/moni-pte\"\n                githubUrl=\"/github/moni-pte\"\n                technology=\"ReactJS, Redux, Spring Boot, MongoDB, Netflix Eureka\"\n              />\n              <ProjectCard\n                name=\"PTE UI\"\n                description=\"npm package for UI components of questions in PTE test\"\n                imageSrc={pteUiLanding}\n                link=\"/pte-ui\"\n                githubUrl=\"/github/pte-ui\"\n                technology=\"Storybook, Redux, TypeScript\"\n              />\n              <ProjectCard\n                name=\"BENIT Academy\"\n                description=\"Scalable E-learning platform like Udacity\"\n                imageSrc={pteLanding}\n                link=\"/nauvus\"\n                githubUrl=\"/github/nauvus\"\n                technology=\"ReactJS, Redux, Spring Boot, MongoDB\"\n              />\n            </div>\n          </>\n      }\n\n      {/* Personal projects */}\n      <h3>Personal Projects</h3>\n      <>\n        <div className={matches === true ? classes.rowWrapper_2_sm : classes.rowWrapper_2}>\n          <ProjectCard\n            name=\"MSTC VN\"\n            description=\"A company profile website for a family business\"\n            imageSrc={mstcLanding}\n            link=\"mstc-vn\"\n            githubUrl=\"/github/mstc\"\n            technology=\"ReactJS, TypeScript, Spring Boot, AWS, MongoDB\"\n          />\n          <ProjectCard\n            name=\"Message web app\"\n            description=\"A message platform\"\n            imageSrc={chatAppLanding}\n            link=\"/bidmax\"\n            githubUrl=\"/github/bidmax\"\n            technology=\"ReactJS, TypeScript, Spring Boot, NodeJS, SocketIO, AWS, MongoDB\"\n          />\n        </div>\n      </>\n    </div>\n  )\n}\n\nconst mapStateToProps = ({ theme }: IRootState) => ({\n  theme: theme.theme,\n  color: theme.color\n})\n\nconst mapDispatchToProps = {\n  changeTheme\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Projects);","import React, { useState } from \"react\";\nimport classNames from \"classnames\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport { connect } from \"react-redux\";\nimport { IRootState } from \"store/reducers\";\nimport { changeTheme } from \"store/actions/theme\"\nimport { ChangeThemePayload } from \"store/actions/payload-types\";\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n// @material-ui/icons\n\n\nconst drawerWidth = 250;\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n  root: {\n    width: \"100%\",\n    fontFamily: \"'Hina Mincho', serif;\",\n    fontSize: 20\n  },\n}))\n\n\n\ninterface IState {\n  theme: string;\n  color: string;\n}\n\ninterface IDispatch {\n  changeTheme: (theme: ChangeThemePayload) => {}\n}\n\n\ninterface ResumeProps {\n  children: React.ReactNode\n}\n\ntype Props = ResumeProps & IState & IDispatch\n\nconst Resume: React.FC<Props> = (props) => {\n  const classes = useStyles();\n  const matches = useMediaQuery('(max-width:768px)');\n\n  return (\n    <div className={classes.root}>\n      resume\n    </div>\n  )\n}\n\nconst mapStateToProps = ({ theme }: IRootState) => ({\n  theme: theme.theme,\n  color: theme.color\n})\n\nconst mapDispatchToProps = {\n  changeTheme\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Resume);","import React, { useState } from \"react\";\nimport classNames from \"classnames\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport { connect } from \"react-redux\";\nimport { IRootState } from \"store/reducers\";\nimport { changeTheme } from \"store/actions/theme\"\nimport { ChangeThemePayload } from \"store/actions/payload-types\";\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n// @material-ui/icons\n\n\nconst drawerWidth = 250;\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n  root: {\n    width: \"100%\",\n    fontFamily: \"'Hina Mincho', serif;\",\n    fontSize: 20\n  },\n}))\n\n\n\ninterface IState {\n  theme: string;\n  color: string;\n}\n\ninterface IDispatch {\n  changeTheme: (theme: ChangeThemePayload) => {}\n}\n\n\ninterface ContactProps {\n  children: React.ReactNode\n}\n\ntype Props = ContactProps & IState & IDispatch\n\nconst Contact: React.FC<Props> = (props) => {\n  const classes = useStyles();\n  const matches = useMediaQuery('(max-width:768px)');\n\n  return (\n    <div className={classes.root}>\n      contact\n    </div>\n  )\n}\n\nconst mapStateToProps = ({ theme }: IRootState) => ({\n  theme: theme.theme,\n  color: theme.color\n})\n\nconst mapDispatchToProps = {\n  changeTheme\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Contact);","import React, { useState } from \"react\";\nimport classNames from \"classnames\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport { connect } from \"react-redux\";\nimport { IRootState } from \"store/reducers\";\nimport { changeTheme } from \"store/actions/theme\"\nimport { ChangeThemePayload } from \"store/actions/payload-types\";\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n// @material-ui/icons\n\n\nconst drawerWidth = 250;\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n  root: {\n    width: \"100%\",\n    fontFamily: \"'Hina Mincho', serif;\",\n    fontSize: 20\n  },\n}))\n\n\n\ninterface IState {\n  theme: string;\n  color: string;\n}\n\ninterface IDispatch {\n  changeTheme: (theme: ChangeThemePayload) => {}\n}\n\n\ninterface PlaygroundProps {\n  children: React.ReactNode\n}\n\ntype Props = PlaygroundProps & IState & IDispatch\n\nconst Playground: React.FC<Props> = (props) => {\n  const classes = useStyles();\n  const matches = useMediaQuery('(max-width:768px)');\n\n  return (\n    <div className={classes.root}>\n      Playground\n    </div>\n  )\n}\n\nconst mapStateToProps = ({ theme }: IRootState) => ({\n  theme: theme.theme,\n  color: theme.color\n})\n\nconst mapDispatchToProps = {\n  changeTheme\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Playground);","import DescriptionIcon from '@material-ui/icons/Description';\nimport CodeIcon from '@material-ui/icons/Code';\nimport SportsEsportsIcon from '@material-ui/icons/SportsEsports';\nimport PersonIcon from '@material-ui/icons/Person';\nimport PhoneIcon from '@material-ui/icons/Phone';\nimport ColorLensIcon from '@material-ui/icons/ColorLens';\n// components\nimport About from 'views/About';\nimport Projects from 'views/Projects';\nimport Resume from 'views/Resume';\nimport Contact from 'views/Contact';\nimport Playground from 'views/Playground';\n\nconst routes = [\n  {\n    path: \"/about\",\n    name: \"About\",\n    icon: PersonIcon,\n    components: About\n  },\n  {\n    path: \"/projects\",\n    name: \"Projects\",\n    icon: CodeIcon,\n    components: Projects\n  },\n  {\n    path: \"/resume\",\n    name: \"Resume\",\n    icon: DescriptionIcon,\n    components: Resume\n  },\n  {\n    path: \"/contact\",\n    name: \"Contact\",\n    icon: PhoneIcon,\n    components: Contact\n  },\n  {\n    path: \"/playground\",\n    name: \"Playground\",\n    icon: SportsEsportsIcon,\n    components: Playground\n  },\n  {\n    path: \"/theme\",\n    name: \"Theme\",\n    icon: ColorLensIcon,\n    components: About\n  }\n]\n\nexport default routes;","import React, { useState } from \"react\";\nimport classNames from \"classnames\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport SearchAppBar from \"components/AppBar/AppBar\";\nimport Fab from '@material-ui/core/Fab';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport Zoom from '@material-ui/core/Zoom';\nimport { useScrollTrigger } from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport { IRootState } from \"store/reducers\";\nimport { changeTheme } from \"store/actions/theme\"\nimport { changeRoute } from \"store/actions/route\";\nimport { ChangeThemePayload } from \"store/actions/payload-types\";\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport Drawer from '@material-ui/core/Drawer';\nimport Typography from '@material-ui/core/Typography';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { Redirect, Route, useHistory } from \"react-router-dom\"\n// @material-ui/icons\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport CodeIcon from '@material-ui/icons/Code';\nimport SportsEsportsIcon from '@material-ui/icons/SportsEsports';\nimport PersonIcon from '@material-ui/icons/Person';\nimport PhoneIcon from '@material-ui/icons/Phone';\nimport ColorLensIcon from '@material-ui/icons/ColorLens';\n\nimport routes from \"routes\";\nimport { useEffect } from \"react\";\n\nconst drawerWidth = 250;\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n  root: {\n    width: \"100%\",\n    height: \"auto\",\n    padding: 0,\n    margin: 0,\n    top: 0,\n    left: 0,\n    right: 0,\n    fontFamily: \"'Hina Mincho', serif;\",\n    fontSize: 20\n  },\n  scrollRoot: {\n    position: 'fixed',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n  bodyWrapper: {\n    paddingTop: 70,\n    flexGrow: 1,\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: `calc(100% - 0px) !important`,\n    marginLeft: 0,\n  },\n  bodyWrapperShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    // marginLeft: 0,\n    width: `calc(100% - ${drawerWidth}px) !important`,\n    marginLeft: drawerWidth,\n  },\n  main: {\n    maxWidth: 1100,\n    margin: \"auto\",\n    padding: 30,\n    overflowX: \"hidden\"\n  },\n  // drawer\n  list: {\n    width: 250,\n    fontFamily: \"'Hina Mincho', serif;\",\n    fontSize: 20,\n  },\n  drawerHeader: {\n    fontFamily: \"'Hina Mincho', serif;\",\n    fontSize: 28,\n    fontWeight: 700,\n    textAlign: 'center',\n    padding: \"20px 0px\"\n  },\n  drawerText: {\n    fontFamily: \"'Hina Mincho', serif;\",\n    fontSize: 20,\n    fontWeight: 500\n  },\n  listItem: {\n    color: \"black\",\n    background: \"white\"\n  },\n  active: {\n    color: \"#ffffff !important\",\n    background: \"#00000057 !important\"\n  },\n  iconActive: {\n    fill: \"#ffffff\"\n  },\n}))\n\ninterface ScrollProps {\n  window?: () => Window;\n  children: React.ReactElement;\n}\n\nconst ScrollTop: React.FC<ScrollProps> = (props) => {\n  const { children, window } = props;\n  const classes = useStyles();\n  // Note that you normally won't need to set the window ref as useScrollTrigger\n  // will default to window.\n  // This is only being set here because the demo is in an iframe.\n  const trigger = useScrollTrigger({\n    target: window ? window() : undefined,\n    disableHysteresis: true,\n    threshold: 100,\n  });\n\n  const handleClick = (event: React.MouseEvent<HTMLDivElement>) => {\n    const anchor = ((event.target as HTMLDivElement).ownerDocument || document).querySelector('#page-root');\n    // console.log(anchor)\n\n    if (anchor) {\n      anchor.scrollIntoView({ behavior: 'smooth', block: 'center' });\n    }\n  };\n\n  return (\n    <Zoom in={trigger}>\n      <div onClick={handleClick} role=\"presentation\" className={classes.scrollRoot}>\n        {children}\n      </div>\n    </Zoom>\n  );\n}\n\n\ninterface IState {\n  theme: string;\n  color: string;\n  route: string;\n}\n\ninterface IDispatch {\n  changeTheme: (theme: ChangeThemePayload) => {};\n  changeRoute: (route: string) => {};\n}\n\n\ninterface LayoutProps {\n  children: React.ReactNode\n}\n\ntype Props = LayoutProps & ScrollProps & IState & IDispatch\n\nconst Layout: React.FC<Props> = (props) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const matches = useMediaQuery('(max-width:768px)');\n  const [active, setActive] = useState(\"/\")\n\n  const [openDrawer, setOpenDrawer] = useState(false);\n\n  useEffect(() => {\n    setOpenDrawer(!matches)\n  }, [matches])\n\n  useEffect(() => {\n    setActive(history.location.pathname)\n    props.changeRoute(history.location.pathname)\n  }, [history.location.pathname])\n\n  const toggleDrawer = (open: boolean) => (event: React.KeyboardEvent | React.MouseEvent) => {\n    if (event && event.type === 'keydown' &&\n      ((event as React.KeyboardEvent).key === 'Tab' ||\n        (event as React.KeyboardEvent).key === 'Shift')\n    ) {\n      return;\n    }\n\n    setOpenDrawer(open)\n  };\n\n  const handleRouter = (route) => {\n    setActive(route)\n    props.changeRoute(history.location.pathname)\n    history.push(route)\n  }\n\n  const list = () => (\n    <div\n      className={classes.list}\n      role=\"presentation\"\n      // onClick={toggleDrawer(false)}\n      onKeyDown={toggleDrawer(false)}\n    >\n      <Typography className={classes.drawerHeader} style={{ color: props.theme }}>Portfolio</Typography>\n      <Divider />\n      <List>\n        {routes.map((text, index) => {\n          return (\n            <ListItem\n              button\n              key={text.name}\n              className={classNames({\n                [classes.listItem]: true,\n                [classes.active]: text.path === props.route\n              })}\n              onClick={() => handleRouter(text.path)}\n            >\n              <ListItemIcon>\n                {<text.icon className={classNames({\n                  [classes.iconActive]: text.path === props.route\n                })} />}\n              </ListItemIcon>\n              <Typography className={classes.drawerText}\n              >{text.name}</Typography>\n            </ListItem>\n          )\n        })}\n      </List>\n    </div>\n  );\n\n  const getRoutes = (routes) => {\n    return routes.map((prop, key) => {\n      return (\n        <Route\n          path={prop.path}\n          component={prop.components}\n          key={key}\n        />\n      );\n    });\n  }\n\n  return (\n    <div id=\"page-root\" className={classes.root}>\n      <SearchAppBar openDrawer={openDrawer} toggleDrawer={toggleDrawer} />\n      <Drawer\n        anchor=\"left\"\n        open={openDrawer}\n        variant={matches === true ? \"temporary\" : \"persistent\"}\n        onClose={toggleDrawer(false)}\n      // onOpen={toggleDrawer(true)}\n      >\n        {list()}\n      </Drawer>\n      <div className={classNames(classes.bodyWrapper, {\n        [classes.bodyWrapperShift]: openDrawer && !matches,\n      })}>\n        <div className={classes.main}>\n          {/* {props.children} */}\n          {getRoutes(routes)}\n          {\n            history.location.pathname === \"/\" && <Redirect from=\"/\" to=\"/about\" />\n          }\n        </div>\n      </div>\n\n      <ScrollTop {...props}>\n        <Fab style={{ background: props.theme }} size=\"small\" aria-label=\"scroll back to top\">\n          <KeyboardArrowUpIcon style={{ color: props.color }} />\n        </Fab>\n      </ScrollTop>\n    </div>\n  )\n}\n\nconst mapStateToProps = ({ theme, route }: IRootState) => ({\n  theme: theme.theme,\n  color: theme.color,\n  route: route.route\n})\n\nconst mapDispatchToProps = {\n  changeTheme,\n  changeRoute\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Layout);","import React from \"react\";\nimport { Switch, Route, Redirect, Router } from \"react-router-dom\";\nimport { createBrowserHistory } from \"history\";\nimport Layout from \"layouts/Layout\";\nimport About from \"views/About\";\nimport Projects from \"views/Projects\";\nimport Resume from \"views/Resume\";\nimport Contact from \"views/Contact\";\nimport Playground from \"views/Playground\";\n\n\nconst hist = createBrowserHistory();\n\nconst Routes = () => (\n  <div className=\"view-routes\">\n    <Layout>\n      <Router history={hist}>\n        <Route path=\"/about\" component={About} />\n        <Route path=\"/projects\" component={Projects} />\n        <Route path=\"/resume\" component={Resume} />\n        <Route path=\"/contact\" component={Contact} />\n        <Route path=\"/playground\" component={Playground} />\n        {/* <Redirect from=\"/\" to=\"/about\" /> */}\n      </Router>\n    </Layout>\n  </div>\n);\n\nexport default Routes;\n","import React from 'react';\nimport { BrowserRouter } from \"react-router-dom\"\nimport './App.css';\nimport AppRoutes from \"./app-routes\"\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <AppRoutes />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import axios from \"axios\";\nimport { SERVICE_CONFIG } from \"./constants\"\n\n// config defaults for axios\naxios.defaults.baseURL = SERVICE_CONFIG.SERVICE_API_URL\naxios.defaults.headers.post['Content-Type'] = 'application/json';\n\n\nconst setUpAxiosInterceptors = (onErrorHandling) => {\n\n  const onResponseSuccess = (response) => response\n  const onResponseError = (error) => {\n    if (error.response && error.response.data) {\n      const status = error.status || error.response.status;\n\n      if (status === 403 || status === 401 || status === 400) {\n        onErrorHandling();\n      }\n      return Promise.reject(error.response.data);\n    }\n    return Promise.reject(error);\n  };\n\n  axios.interceptors.response.use(onResponseSuccess, onResponseError);\n}\n\nexport default setUpAxiosInterceptors;","export const SERVICE_CONFIG = {\n  SERVICE_API_URL: \"http://localhost:8080\"\n}\n","import { call, put, takeLatest, takeEvery, all } from \"redux-saga/effects\";\nimport { THEME } from \"../root/type\";\nimport { SUCCESS, FAILURE } from \"store/utils/async_types\";\n\nconst fetchUserApi = (payload) => {\n  return payload + 1000;\n};\n\n// saga function\nfunction* changeTheme(action) {\n  try {\n    yield put({\n      type: SUCCESS(THEME.changeTheme),\n      payload: action.payload,\n    });\n  } catch (error) {\n    yield put({\n      type: FAILURE(THEME.changeTheme),\n      payload: error,\n    });\n  }\n}\n\nexport function* ThemeWorker() {\n  yield takeLatest(THEME.changeTheme, changeTheme);\n}\n\nfunction* ThemeWatcher() {\n  yield all([ThemeWorker()]);\n}\n\nexport default ThemeWatcher;\n","import {\n  all,\n  fork,\n} from \"redux-saga/effects\";\n\nimport OverviewWatcher from \"./theme\";\n\nexport default function* rootSaga() {\n  yield all([\n    fork(OverviewWatcher),\n  ]);\n}\n","import { THEME } from \"../root/type\";\nimport { REQUEST, FAILURE, SUCCESS } from \"../utils/async_types\";\n\nconst initialState = {\n  // theme: \"#3f51b5\",\n  theme: \"#000000\",\n  color: \"#ffffff\",\n  loading: false,\n  errorMessage: null,\n};\n\nexport type ThemeState = Readonly<typeof initialState>;\n\nconst themeReducer = (state: ThemeState = initialState, action): ThemeState => {\n  switch (action.type) {\n    case REQUEST(THEME.changeTheme):\n      return {\n        ...state,\n        loading: true,\n      };\n    case FAILURE(THEME.changeTheme):\n      return {\n        ...state,\n        loading: true,\n        errorMessage: action.payload,\n      };\n    case SUCCESS(THEME.changeTheme):\n      return {\n        ...state,\n        theme: action.payload.theme,\n        color: action.payload.color\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default themeReducer;","import { ROUTE } from \"../root/type\";\nimport { REQUEST, FAILURE, SUCCESS } from \"../utils/async_types\";\n\nconst initialState = {\n  route: \"/\",\n  loading: false,\n  errorMessage: null,\n};\n\nexport type RouteState = Readonly<typeof initialState>;\n\nconst routeReducer = (state: RouteState = initialState, action): RouteState => {\n  switch (action.type) {\n    case REQUEST(ROUTE.changeRoute):\n      return {\n        ...state,\n        loading: true,\n      };\n    case FAILURE(ROUTE.changeRoute):\n      return {\n        ...state,\n        loading: true,\n        errorMessage: action.payload,\n      };\n    case SUCCESS(ROUTE.changeRoute):\n      return {\n        ...state,\n        route: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default routeReducer;","import { combineReducers } from \"redux\";\nimport theme, { ThemeState } from \"./theme\";\nimport route, { RouteState } from \"./route\";\n\nexport interface IRootState {\n  readonly theme: ThemeState;\n  readonly route: RouteState;\n}\n\nconst rootReducers = combineReducers<IRootState>({\n  theme,\n  route\n});\n\nexport default rootReducers;\n","const loggerMiddleware = () => (next) => (action) => {\n  const { type, payload, meta } = action;\n\n  console.groupCollapsed(type);\n  // tslint:disable-next-line\n  console.log(\"Payload:\", payload);\n  // tslint:disable-next-line\n  console.log(\"Meta:\", meta);\n  console.groupEnd();\n\n  return next(action);\n};\n\nexport default loggerMiddleware;","import { createStore, applyMiddleware } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootSaga from \"../sagas/rootSaga\";\nimport rootReducers, { IRootState } from \"../reducers/index\";\nimport loggerMiddlewares from \"./logger-middleware\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst defaultMiddlewares = [sagaMiddleware, loggerMiddlewares];\n\nconst initialize = (initialState?: IRootState, middlewares = []) => {\n  const store = createStore(\n    rootReducers,\n    initialState,\n    composeWithDevTools(applyMiddleware(...defaultMiddlewares, ...middlewares))\n  );\n  sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nexport default initialize;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport setUpAxiosInterceptors from 'store/utils/axios-interceptor';\nimport initStore from \"store/root/store\"\nimport { Provider } from \"react-redux\"\n\nsetUpAxiosInterceptors(() => console.log(\"axios error\"))\n\nconst store = initStore();\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}